<Window x:Class="WpfSameFileFinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sameFileFinder="clr-namespace:SameFileFinder;assembly=SameFileFinder"
        xmlns:wpfSameFileFinder="clr-namespace:WpfSameFileFinder"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        mc:Ignorable="d"
        Title="SameFilesFinder" Height="350" Width="{Binding MaxWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MinHeight="250" MinWidth="400">
    <Window.Resources>
        <wpfSameFileFinder:DataGridLenthConverter x:Key="Converter"/>
        <BooleanToVisibilityConverter x:Key="BtoVConverter"/>
        <wpfSameFileFinder:InversBooleanToVisibilityConverter x:Key="InversBtoVConverter"/>
    </Window.Resources>

    <Grid  Background="DimGray" IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--<RowDefinition Height="Auto" />-->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox  Focusable="True" MinWidth="400" Grid.Column="0"  Name="FolderPath" Margin="50,10,5,5" Text = "{Binding CurrentPath, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Padding="2" Background="White" HorizontalAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger  EventName="KeyUp" >
                        <command:EventToCommand Command="{Binding OnTextBoxKeyPressed}"  CommandParameter="{Binding RelativeSource= { RelativeSource FindAncestor,  AncestorType={x:Type ListView}, AncestorLevel=1}}"  PassEventArgsToCommand="True"  />
                    </i:EventTrigger>
                    <i:EventTrigger  EventName="LostFocus" >
                        <command:EventToCommand Command="{Binding GetTb}"  CommandParameter="{Binding ElementName=FolderPath}"  PassEventArgsToCommand="True"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <Popup  Focusable="True" MaxHeight="400" Grid.Column="0"  x:Name="PopUp"  IsOpen="{Binding ShowPopUp}" StaysOpen="False">
                <i:Interaction.Triggers>
                    <!--<i:EventTrigger  EventName="Opened" >
                        <command:EventToCommand Command="{Binding GetPopup}" CommandParameter="{Binding RelativeSource= { RelativeSource FindAncestor,  AncestorType={x:Type StackPanel}, AncestorLevel=1}}"  PassEventArgsToCommand="True"  />
                    </i:EventTrigger>-->
                </i:Interaction.Triggers>
                <ListView  Focusable="True" x:Name="ListView" ItemsSource="{Binding Directories}" ScrollViewer.PanningRatio="0.1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger  EventName="SizeChanged" >
                            <command:EventToCommand Command="{Binding GetPopup}" CommandParameter="{Binding ElementName=ListView}"  PassEventArgsToCommand="True"  />
                        </i:EventTrigger>
                        <i:EventTrigger  EventName="KeyUp" >
                            <command:EventToCommand Command="{Binding OnPopupKeyPressed}"  PassEventArgsToCommand="True"  />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Popup>
            <Button Content="..." Grid.Column="1"  x:Name="SelectPath"  Margin="5,10,5,5" Padding="3" Command="{Binding SetThePath}" MinWidth="50" HorizontalAlignment="Stretch"/>
            <Button Content="{Binding StartContent}" Grid.Column="2"  x:Name="Calculate"  Padding="3" Margin ="5,10,50,5" Command="{Binding  GetGroups}" MinWidth="50" HorizontalAlignment="Stretch"/>
        </Grid>
        <Grid Name="ListGrid" Grid.Row="1" Visibility="{Binding Visible, Converter={StaticResource  BtoVConverter}, UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
                
            <ListView Name = "HeaderView" HorizontalContentAlignment="Stretch" Grid.Row="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  SelectionMode="Single" HorizontalAlignment="Stretch"  Margin="5,5,5,0" VerticalAlignment="Top" MaxWidth="{Binding ElementName=GroupList, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}" >
                <ListView.Items>
                    <ListViewItem>
                        <DataGrid CanUserReorderColumns="False" MinColumnWidth="60"  AutoGenerateColumns="False"  Width="{Binding DataContext.MaxWidth, Mode=TwoWay}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MaxWidth="{Binding ElementName=GroupList, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" ColumnWidth="*" CanUserResizeColumns="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn  Header="Path"  
                                                     Width="{Binding Source={x:Reference GroupList}, Path=DataContext.PathWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"
                                                    />
                                <DataGridTextColumn  Header="Name"  
                                                     Width="{Binding Source={x:Reference GroupList}, Path=DataContext.NameWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"  
                                                    />
                                <DataGridTextColumn  Header="Length" 
                                                     Width="{Binding Source={x:Reference GroupList}, Path=DataContext.LengthWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}" 
                                                    />
                                <DataGridTextColumn  Header="Hash" 
                                                     Width="{Binding Source={x:Reference GroupList}, Path=DataContext.HashWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"
                                                    />
                            </DataGrid.Columns>
                        </DataGrid>
                    </ListViewItem>
                </ListView.Items>
            </ListView>

            <ListView  ItemsSource ="{Binding Groups}" Grid.Row="1"  Name="GroupList"  Margin="5,0,5,5" Height="Auto" VerticalAlignment="Top" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="DarkGray" BorderBrush="White" SelectionMode="Single" HorizontalAlignment="Stretch" >
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type sameFileFinder:FileGroup}">
                        <DataGrid CanUserReorderColumns="False" IsReadOnly="True" ItemsSource="{Binding Files}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" AutoGenerateColumns="false" 
                                  Tag="{Binding ElementName=GroupList, Path=DataContext}" Width="{Binding ElementName=GroupList, Path=ActualWidth,UpdateSourceTrigger=PropertyChanged}" 
                                  SelectedItem="{Binding DataContext.SelectedItem, ElementName=GroupList, UpdateSourceTrigger=PropertyChanged}" HeadersVisibility="None" 
                                  HorizontalScrollBarVisibility="Disabled">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header=" "  Binding="{Binding Path}" MinWidth="60" Width="{Binding Source={x:Reference GroupList}, Path=DataContext.PathWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"/>

                                <DataGridTextColumn Header=" "  Binding="{Binding Name}" MinWidth="60"  Width="{Binding Source={x:Reference GroupList}, Path=DataContext.NameWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"/>

                                <DataGridTextColumn Header=" "  Binding="{Binding Length}" MinWidth="60" Width="{Binding Source={x:Reference GroupList}, Path=DataContext.LengthWidth, Mode=TwoWay, Converter={StaticResource Converter}, UpdateSourceTrigger=PropertyChanged}"/>

                                <DataGridTextColumn Header=" "  Binding="{Binding Hash}" Width="{Binding Source={x:Reference GroupList}, Path=DataContext.HashWidth, Mode=TwoWay, Converter={StaticResource Converter},UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open Contain Folder"  Command="{Binding EnterTheFolder}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

        </Grid>

        <Grid x:Name="WpfProgressBarAndText" Grid.Row="2" Margin="30,50,30,30"  Visibility="{Binding Visible, Converter={StaticResource  InversBtoVConverter}, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" HorizontalAlignment="Stretch" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Margin="5" Padding="3" HorizontalAlignment="Center" Text='Processing, Please Wait...' Width="Auto" Background="Transparent" Foreground="White"/>
            <ProgressBar Grid.Row="1" x:Name="WpfProgressBar" IsIndeterminate="True"  Width="{Binding DataContext.MaxWidth, Mode=TwoWay}" />
        </Grid>
    </Grid>
</Window>
    